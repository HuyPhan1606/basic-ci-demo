pipeline {
    agent any

    tools {
        nodejs 'NodeJS'
    }

    environment {
        // X√°c ƒë·ªãnh xem c√≥ ph·∫£i PR kh√¥ng v√† target branch l√† g√¨
        IS_PR = "${env.CHANGE_ID ? 'true' : 'false'}"
        PR_TARGET = "${env.CHANGE_TARGET ?: ''}"
        CURRENT_BRANCH = "${env.BRANCH_NAME}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    echo "üîç Pipeline Info:"
                    echo "   - Current Branch: ${env.CURRENT_BRANCH}"
                    echo "   - Is PR: ${env.IS_PR}"
                    if (env.IS_PR == 'true') {
                        echo "   - PR: ${env.CHANGE_BRANCH} ‚Üí ${env.PR_TARGET}"
                        echo "   - PR ID: ${env.CHANGE_ID}"
                    }
                }
            }
        }

        stage('Build & Test') {
            // Ch·ªâ build khi KH√îNG ph·∫£i PR (t·ª©c l√† push tr·ª±c ti·∫øp v√†o branch)
            when {
                not {
                    changeRequest()
                }
            }
            steps {
                echo "üî® Building on branch: ${env.CURRENT_BRANCH}"
                sh 'echo "Installing dependencies..."'
                sh 'npm install'
                
                echo "üß™ Running tests..."
                sh 'npm test'
                
                echo "üì¶ Building application..."
                sh 'echo "Build completed successfully!"'
            }
        }

        stage('PR Validation') {
            // Ch·ªâ ch·∫°y khi l√† PR - validate vi·ªác merge
            when {
                changeRequest()
            }
            steps {
                script {
                    echo "üîç Validating PR: ${env.CHANGE_BRANCH} ‚Üí ${env.PR_TARGET}"
                    
                    // Ch·ªâ install dependencies v√† ch·∫°y test c∆° b·∫£n ƒë·ªÉ validate PR
                    echo "üì• Installing dependencies for PR validation..."
                    sh 'npm install'
                    
                    echo "üß™ Running basic tests to validate merge..."
                    sh 'npm test'
                    
                    echo "‚úÖ PR validation completed!"
                    echo "   - Source: ${env.CHANGE_BRANCH}"
                    echo "   - Target: ${env.PR_TARGET}"
                    echo "   - Ready for merge!"
                }
            }
        }

        stage('Deploy to Dev') {
            when {
                allOf {
                    branch 'dev'
                    not { changeRequest() } // Ch·ªâ deploy khi push tr·ª±c ti·∫øp, kh√¥ng ph·∫£i PR
                }
            }
            steps {
                echo "üöÄ Deploying to Dev server..."
                echo "   - Branch: dev"
                echo "   - Environment: Development"
                // Th√™m script deploy th·ª±c t·∫ø ·ªü ƒë√¢y
                sh 'echo "Deploy to dev completed!"'
            }
        }

        stage('Deploy to QA') {
            when {
                allOf {
                    branch 'qa'
                    not { changeRequest() }
                }
            }
            steps {
                echo "üöÄ Deploying to QA server..."
                echo "   - Branch: qa"
                echo "   - Environment: Quality Assurance"
                // Th√™m script deploy th·ª±c t·∫ø ·ªü ƒë√¢y
                sh 'echo "Deploy to QA completed!"'
            }
        }

        stage('Deploy to Production') {
            when {
                allOf {
                    branch 'main'
                    not { changeRequest() }
                }
            }
            steps {
                echo "üöÄ Deploying to Production server..."
                echo "   - Branch: main"
                echo "   - Environment: Production"
                echo "‚ö†Ô∏è  Production deployment - please verify!"
                // Th√™m script deploy th·ª±c t·∫ø ·ªü ƒë√¢y
                sh 'echo "Deploy to production completed!"'
            }
        }

        stage('Cleanup') {
            steps {
                echo "üßπ Cleaning up workspace..."
                // Cleanup n·∫øu c·∫ßn
                sh 'echo "Cleanup completed!"'
            }
        }
    }

    post {
        always {
            echo "üìä Pipeline Summary:"
            echo "   - Branch: ${env.CURRENT_BRANCH}"
            echo "   - Is PR: ${env.IS_PR}"
            echo "   - Status: ${currentBuild.currentResult}"
        }
        
        success {
            script {
                if (env.IS_PR == 'true') {
                    echo "‚úÖ PR validation successful! Ready to merge ${env.CHANGE_BRANCH} ‚Üí ${env.PR_TARGET}"
                } else {
                    echo "‚úÖ Branch build successful on ${env.CURRENT_BRANCH}!"
                }
            }
        }
        
        failure {
            script {
                if (env.IS_PR == 'true') {
                    echo "‚ùå PR validation failed! Please fix issues before merging."
                } else {
                    echo "‚ùå Branch build failed on ${env.CURRENT_BRANCH}!"
                }
            }
        }
        
        cleanup {
            // Cleanup workspace n·∫øu c·∫ßn
            deleteDir()
        }
    }
}